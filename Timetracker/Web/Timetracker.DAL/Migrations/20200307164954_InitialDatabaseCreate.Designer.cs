// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Timetracker.DAL.Context;

namespace Timetracker.DAL.Migrations
{
    [DbContext(typeof(TimetrackerDbContext))]
    [Migration("20200307164954_InitialDatabaseCreate")]
    partial class InitialDatabaseCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Timetracker.Entities.Data.ProjectEntity", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Color");

                    b.Property<string>("Title");

                    b.HasKey("Id");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Title = "Project 1"
                        },
                        new
                        {
                            Id = 2,
                            Title = "Project 2"
                        },
                        new
                        {
                            Id = 3,
                            Title = "Project 3"
                        });
                });

            modelBuilder.Entity("Timetracker.Entities.Data.ProjectUserRoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProjectId");

                    b.Property<int>("RoleId");

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.HasIndex("RoleId");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectsUsersRoles");

                    b.HasData(
                        new
                        {
                            Id = 6,
                            ProjectId = 1,
                            RoleId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 7,
                            ProjectId = 2,
                            RoleId = 1,
                            UserId = 2
                        },
                        new
                        {
                            Id = 8,
                            ProjectId = 3,
                            RoleId = 1,
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Timetracker.Entities.Data.RoleEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Manager"
                        },
                        new
                        {
                            Id = 2,
                            Name = "User"
                        });
                });

            modelBuilder.Entity("Timetracker.Entities.Data.RolePermissionEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Permission");

                    b.Property<int>("RoleId");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolesPermissions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Permission = 16,
                            RoleId = 1
                        },
                        new
                        {
                            Id = 2,
                            Permission = 17,
                            RoleId = 2
                        },
                        new
                        {
                            Id = 3,
                            Permission = 22,
                            RoleId = 2
                        });
                });

            modelBuilder.Entity("Timetracker.Entities.Data.TimeLogEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime");

                    b.Property<string>("Description");

                    b.Property<int>("Duration");

                    b.Property<string>("Logs");

                    b.Property<int>("ProjectUserRoleId");

                    b.HasKey("Id");

                    b.HasIndex("ProjectUserRoleId");

                    b.ToTable("TimeLogs");
                });

            modelBuilder.Entity("Timetracker.Entities.Data.UserDetailEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("UserId");

                    b.HasKey("Id");

                    b.ToTable("UserDetails");
                });

            modelBuilder.Entity("Timetracker.Entities.Data.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName");

                    b.Property<byte[]>("Timestamp")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate();

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Vialik"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Alex"
                        });
                });

            modelBuilder.Entity("Timetracker.Entities.Data.ProjectUserRoleEntity", b =>
                {
                    b.HasOne("Timetracker.Entities.Data.ProjectEntity", "ProjectEntity")
                        .WithMany("ProjectsUsersRoles")
                        .HasForeignKey("ProjectId");

                    b.HasOne("Timetracker.Entities.Data.RoleEntity", "Role")
                        .WithMany("ProjectsUsersRoles")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Timetracker.Entities.Data.UserEntity", "UserEntity")
                        .WithMany("ProjectsUsersRoles")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetracker.Entities.Data.RolePermissionEntity", b =>
                {
                    b.HasOne("Timetracker.Entities.Data.RoleEntity", "Role")
                        .WithMany("RolesPermissions")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Timetracker.Entities.Data.TimeLogEntity", b =>
                {
                    b.HasOne("Timetracker.Entities.Data.ProjectUserRoleEntity", "ProjectUserRole")
                        .WithMany("TimeLogs")
                        .HasForeignKey("ProjectUserRoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
